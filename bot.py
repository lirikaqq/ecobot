from telebot import TeleBot, types
from article_parser import extract_articles, get_article_text
from image_downloader import download_image

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = TeleBot(token='')

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
last_article_message = {}
last_list_message = {}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–î–∞!üîÖ")
    markup.add(btn1)
    bot.send_message(
        message.from_user.id,
        "–ü—Ä–∏–≤–µ—Ç! –Ø –≠–∫–æ–ë–æ—Ç-–¢–∏—Ñ—Ñ–∞, —è —É–≤–ª–µ–∫–∞—é—Å—å —ç–∫–æ–ª–æ–≥–∏–µ–π –∏ –±–µ—Ä–µ–≥—É –æ–∫—Ä—É–∂–∞—é—â—É—é —Å—Ä–µ–¥—É üòá\n\n"
        "**–≠—Ç–æ—Ç –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –ø–æ—ç—Ç–æ–º—É –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏. "
        "–ù–æ–≤–æ—Å—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º—ã –ø–æ–ª—É—á–∞–µ–º —Å –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ [–†–ë–ö](https://www.rbc.ru/life/tag/ecology).**\n\n"
        "–ù–∞—á–Ω—ë–º –≤–º–µ—Å—Ç–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –Ω–∞—à—É –ø–ª–∞–Ω–µ—Ç—É?",
        parse_mode='Markdown',
        reply_markup=markup
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def get_message(message):
    if message.text == '–î–∞!üîÖ':
        show_main_menu(message)

    elif message.text == '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é':
        return_to_menu(message)

    elif message.text == '–ù–æ–≤–æ—Å—Ç–∏ –æ–± —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö':
        articles = extract_articles('https://www.rbc.ru/life/tag/ecology')  # URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å—Ç–∞—Ç—å—è–º–∏

        if not articles:
            bot.send_message(message.from_user.id, "–°—Ç–∞—Ç—å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
            return

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º —Å—Ç–∞—Ç–µ–π
        markup = types.InlineKeyboardMarkup()
        for article in articles:
            markup.add(types.InlineKeyboardButton(text=article['title'], callback_data=article['url']))

        sent_message = bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—å—é:', reply_markup=markup)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–µ—Ä–µ—á–Ω–µ–º —Å—Ç–∞—Ç–µ–π
        last_list_message[message.from_user.id] = sent_message.message_id

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏
@bot.callback_query_handler(func=lambda call: True)
def handle_inline_buttons(call):
    article_url = call.data
    article_text = get_article_text(article_url)
    image_url = download_image(article_url)

    # –û–±—Ä–µ–∑–∞–µ–º —Ç–µ–∫—Å—Ç –¥–æ 1024 —Å–∏–º–≤–æ–ª–æ–≤, –Ω–µ –æ–±—Ä—ã–≤–∞—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
    if len(article_text) > 1024:
        caption = article_text[:1024]
        last_punctuation_index = max(
            caption.rfind("."),
            caption.rfind("!"),
            caption.rfind("?")
        )
        if last_punctuation_index != -1:
            caption = caption[:last_punctuation_index + 1]
    else:
        caption = article_text

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    back_button = types.KeyboardButton('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
    markup.add(back_button)

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if call.message.chat.id in last_article_message:
        bot.delete_message(call.message.chat.id, last_article_message[call.message.chat.id])

    if image_url:
        sent_message = bot.send_photo(call.message.chat.id, image_url, caption=caption, parse_mode='HTML', reply_markup=markup)
    else:
        sent_message = bot.send_message(call.message.chat.id, article_text, parse_mode='HTML', reply_markup=markup)
        bot.send_message(call.message.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.", reply_markup=markup)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    last_article_message[call.message.chat.id] = sent_message.message_id

def show_main_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn2 = types.KeyboardButton('–ú–∞–≥–∞–∑–∏–Ω—ã —Å —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç—ã–º–∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏')
    btn3 = types.KeyboardButton('–ù–æ–≤–æ—Å—Ç–∏ –æ–± —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö')
    btn4 = types.KeyboardButton('–≠–∫–æ-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–≤–æ–µ–º—É –≥–æ—Ä–æ–¥—É')
    markup.add(btn2, btn3, btn4)
    bot.send_message(message.from_user.id, '–° —á–µ–≥–æ –Ω–∞—á–Ω—ë–º‚ùì', reply_markup=markup)

def return_to_menu(message):
    # –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–µ—Ä–µ—á–Ω–µ–º —Å—Ç–∞—Ç–µ–π –∏ —Å—Ç–∞—Ç—å–µ–π
    if message.from_user.id in last_list_message:
        bot.delete_message(message.chat.id, last_list_message[message.from_user.id])
    if message.from_user.id in last_article_message:
        bot.delete_message(message.chat.id, last_article_message[message.from_user.id])

    show_main_menu(message)

def main():
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    bot.infinity_polling()

if __name__ == '__main__':
    main()
